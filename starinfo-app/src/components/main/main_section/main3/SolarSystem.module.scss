$planetCount: 9; // 행성 개수
$planetSize: 1000px; // 각 행성의 크기
$planetSpacing: 1500px; // 각 행성 간 간격
$planetTransitionSpeed: 1.5s; // 행성 애니메이션 전환 속도
$mainPlanetViewAmount: 200px; // 행성의 하단이 보이는 정도
$globalPerspective: 600px; // 3D 원근 효과를 위한 원근 거리
$sceneAxisTilt: -15deg; // 장면의 축 기울기 각도
$menuSpacing: 10px; // 메뉴 간격
$traverse: ""; // 코드 내에서 추가적으로 조합할 경로 정보
$traverseTriggers: ""; // 경로에서 발생할 트리거 정보

// Colors
$mercury:#E8927C;
$venus: #b45d15;
$earth: #26daaa;
$mars: #e55f45;
$jupiter: orange;
$saturn: #b29d81;
$uranus: #8dcdd8;
$neptune: #4f83e2;
$pluto: #FF8732;

@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,700'); // Montserrat 폰트 스타일 추가

// fix

// 전체 3D 행성 시스템 설정
.solar_systm {
  transform-style: preserve-3d; // 내부 요소가 3D 효과를 유지하도록 설정
  pointer-events: none; // 사용자가 클릭할 수 없도록 설정
  height: 100%; // 부모 높이 전체를 차지하도록 설정
  position: absolute;
  left: 0;
  right: 0;
}

* {
  -webkit-user-select: none;  /* 모든 Chrome 및 Safari 브라우저에서 사용자 선택(텍스트 드래그)을 방지 */
  -moz-user-select: none;     /* 모든 Firefox 브라우저에서 사용자 선택 방지 */
  -ms-user-select: none;      /* IE 10 이상에서 사용자 선택 방지 */
  user-select: none;          /* 사용자 선택 방지 - 미래 지원 */
}

%absPosition {
  position: absolute; // 요소를 절대 위치로 설정하여 부모 요소 안에서 위치 지정 가능
  left: 0; // 부모 요소의 왼쪽에 맞춤
  right: 0; // 부모 요소의 오른쪽에 맞춤
  top: 50%; // 부모 요소의 중간 위치
  transform: translateY(-50%); // 수직 방향으로 50% 이동하여 정확한 중앙에 배치
  margin: auto; // 요소가 중앙에 위치하도록 여백 자동 설정
}

// 행성의 외부, 내부 색상 및 텍스처를 설정하는 믹스인
@mixin makePlanet($outer, $inner, $texture) {
  background: url($texture); // 행성의 텍스처 이미지를 배경으로 설정
  box-shadow: 0 (-590px) 150px black inset, 0 0px 130px 40px $inner inset, 0 0px 23px 4px $inner inset, 0 -10px 130px $outer; // 행성의 그림자 효과를 여러 단계로 추가
}

// 궤도를 나타내는 %trajectory 스타일 설정
%trajectory {
  border: 2px dashed white; // 점선 궤도
  position: absolute; // 위치를 절대 위치로 설정
  border-radius: 3400px; // 원형 궤도
  background: none !important; // 배경 제거
  z-index: -2; // 다른 요소 뒤에 배치
}

// 궤도의 크기와 위치를 설정하는 믹스인
@mixin makeTrajectory($width, $left, $top) {
  @extend %trajectory; // %trajectory 스타일을 상속
  width: $width; // 궤도의 너비 설정
  height: $width; // 궤도의 높이 설정
  left: $left; // 궤도의 왼쪽 위치 설정
  top: $top; // 궤도의 위쪽 위치 설정
}

// 달(위성)의 위치, 크기 및 텍스처를 설정하는 믹스인
@mixin makeMoon($left, $top, $scale, $texture) {
  left: $left; // 달의 왼쪽 위치 설정
  top: $top; // 달의 위쪽 위치 설정
  transform: scale($scale); // 달의 크기 비율 설정
  background: url($texture); // 달의 텍스처 이미지 설정
  z-index: -1; // 다른 요소 뒤에 배치
  box-shadow: 0px -30px 30px 10px black inset; // 달의 그림자 효과
}

// 행성의 기본 스타일 설정
%planet {
  height: $planetSize; // 행성의 높이 설정
  width: $planetSize; // 행성의 너비 설정
  border-radius: $planetSize / 2; // 원형으로 만들기 위해 반지름 설정
  background: red; // 기본 배경색 설정
  transition: transform 2.8s .23s cubic-bezier(0.33, 0, 0, 1), opacity 2s .8s, box-shadow 0s 0s; // 행성의 트랜지션 효과
  background-size: 1140px 910px !important; // 배경 이미지 크기 설정
  top: auto;
  bottom: - $planetSize + $mainPlanetViewAmount; // 행성의 아래쪽 위치 설정

  & .moon {
    height: 200px; // 달의 높이 설정
    width: 200px; // 달의 너비 설정
    border-radius: $planetSize / 2; // 달을 원형으로 설정
    background: red; // 달의 기본 배경색
    position: absolute; // 절대 위치 설정
    text-align: center; // 텍스트 중앙 정렬
    color: white; // 텍스트 색상 설정
    text-transform: uppercase; // 텍스트 대문자로 변환
    opacity: 0; // 기본 투명도
    transition: all .6s .2s; // 트랜지션 효과

    h2 {
      font-weight: 100; // 글자 두께 설정
      font-size: 40px; // 글자 크기 설정
      letter-spacing: 5px; // 글자 간격 설정
      margin: 0;
      position: relative;
      top: -120px; // 글자의 위쪽 위치 조정
    }
    h3 {
      font-weight: 100;
      font-size: 20px;
      letter-spacing: 5px;
      color: #fea082; // 색상 설정
      margin: 0;
      position: relative;
      top: -120px;
    }
  }

  @keyframes planet {
    from {background-position-y: 0px;} // 애니메이션 시작 위치
    to {background-position-y: -1000px;} // 애니메이션 끝 위치
  }
}

// 3D 뷰포트 설정
%viewPort {
  position: absolute; // 절대 위치로 설정
  transform: rotatex($sceneAxisTilt); // x축 회전 각도 적용
  perspective: $globalPerspective; // 3D 원근감 설정
  width: 100%; // 너비 100%
  height: 100%; // 높이 100%
  transform-style: preserve-3d; // 자식 요소 3D 유지
}

// 트리거 버튼 스타일 설정
%trigger {
  @extend %absPosition; // 중앙 정렬 믹스인 적용
  width: 220px; // 트리거 버튼의 너비
  height: 220px; // 트리거 버튼의 높이
  border-radius: 550px; // 원형 버튼
  appearance: none; // 기본 브라우저 스타일 제거
  outline: none; // 아웃라인 제거
  cursor: pointer; // 마우스 커서가 포인터로 변경
  z-index: 12; // 버튼이 다른 요소 위에 나타나도록 설정
  left: 18px;
  bottom: 282px;
}

// 체크박스 스타일 설정
%checkbox {
  appearance: none; // 기본 체크박스 스타일 제거
  width: 16px; // 체크박스 너비 설정
  height: 16px; // 체크박스 높이 설정
  border: 2px solid white; // 흰색 테두리 설정
  outline: none; // 외곽선 제거
  border-radius: 20px; // 둥근 모서리 설정
  left: 43px;
  z-index: 2;

  &:checked {
    &::before {
      display: block;
      width: 6px;
      height: 6px;
      background: white; // 체크된 상태의 색상
      position: relative;
      top: 3px;
      left: 3px;
      content: '';
      border-radius: 10px; // 체크 모양을 둥글게 설정
    }
  }
}

body {
  // overflow: hidden;
  // background: black;
  height: 100vh;
  font-family: 'Montserrat', sans-serif;
  .logo {
    color: white; // 로고 텍스트 색상을 흰색으로 설정
    position: absolute; // 화면 상단 중앙에 고정
    top: 40px; // 상단에서 40px 떨어진 위치
    left: 0;
    right: 0;
    margin: auto; // 중앙 정렬
    text-align: center;
    font-size: 14px; // 로고 텍스트 크기 설정
    text-transform: uppercase; // 텍스트를 대문자로 변환
    font-weight: 100; // 폰트 두께를 가볍게 설정
    letter-spacing: 4px; // 문자 간격을 4px로 설정

    span  {
      font-size: 12px; // span 내부 텍스트 크기 설정
      color: #f39041; // 텍스트 색상 설정
      display: block; // 줄바꿈
    }
  }
  label {
    cursor: pointer; // 라벨에 마우스를 올리면 포인터로 표시

    // 각 행성에 대한 라벨 설정
    &.mercury {
      & > .preview {
        background: url('https://www.solarsystemscope.com/images/textures/full/2k_makemake_fictional.jpg') !important; // 수은의 배경 이미지 설정
      }
    }
    &.venus {
      & > .preview {
        background: url('https://nasa3d.arc.nasa.gov/shared_assets/images/ven0aaa2/ven0aaa2-copy-428-321.jpg') !important; // 금성의 배경 이미지 설정
      }
    }
    &.earth {
      & > .preview {
        background: url('https://img00.deviantart.net/04ef/i/2009/114/3/e/new_earth_texture_map_by_lightondesigns.jpg') !important; // 지구의 배경 이미지 설정
      }
    }
    &.mars {
      & > .preview {
        background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/mars_texture.jpg') !important; // 화성의 배경 이미지 설정
      }
    }
    &.jupiter {
      & > .preview {
        background: url('https://www.jpl.nasa.gov/spaceimages/images/largesize/PIA07782_hires.jpg') !important; // 목성의 배경 이미지 설정
      }
    }
    &.saturn {
      & > .preview {
        background: url('https://www.solarsystemscope.com/images/textures/full/2k_saturn.jpg') !important; // 토성의 배경 이미지 설정
      }
    }
    &.uranus {
      & > .preview {
        background: url('https://img00.deviantart.net/957c/i/2017/165/4/9/uranus_texture_map_by_jcpag2010-db7yjwb.png') !important; // 천왕성의 배경 이미지 설정
      }
    }
    &.neptune {
      & > .preview {
        background: url('https://img00.deviantart.net/f068/i/2017/165/b/c/neptune_texture_map_by_jcpag2010-dbcjcv5.png') !important; // 해왕성의 배경 이미지 설정
      }
    }
    &.pluto {
      & > .preview {
        background: url('https://pre00.deviantart.net/4677/th/pre/f/2015/314/4/e/pluto_map__2015_nov_10__by_snowfall_the_cat-d918tlb.png') !important; // 명왕성의 배경 이미지 설정
      }
    }
  }
  label.menu {
    color: white; // 메뉴 라벨 텍스트 색상 설정
    display: block; // 블록 요소로 설정하여 줄바꿈 적용
    position: absolute; // 절대 위치로 배치
    cursor: pointer; // 마우스를 올리면 포인터로 변경
    left: 90px; // 왼쪽에서 90px 떨어진 위치에 배치
    z-index: 2; // 요소가 다른 것들 위에 나타나도록 설정

    &:after {
      // 메뉴 라벨의 가상 요소 설정
      display: block;
      width: 12px; // 가상 요소의 너비
      height: 12px; // 가상 요소의 높이
      border: 2px solid white; // 흰색 테두리 설정
      border-radius: 60px; // 둥근 모양으로 설정
      content: ''; // 가상 요소에 내용 없음
      z-index: 2; // 다른 요소 위에 표시
      position: absolute;
      top: -4px; // 상단에서 4px 위로 위치 조정
      left: -4px; // 왼쪽에서 4px 왼쪽으로 위치 조정
    }

    &:hover {
      // 메뉴에 마우스를 올렸을 때 h2와 h3의 투명도를 1로 설정해 뚜렷하게 보이도록
      h2, h3 {
        opacity: 1;
      }
    }

    // 행성 별로 pip(색상 표시 점)의 배경색을 설정
    &.mercury {
      h2 .pip {
        background: $mercury;
      }
    }
    &.venus {
      h2 .pip {
        background: $venus;
      }
    }
    &.earth {
      h2 .pip {
        background: $earth;
      }
    }
    &.mars {
      h2 .pip {
        background: $mars;
      }
    }
    &.jupiter {
      h2 .pip {
        background: $jupiter;
      }
    }
    &.saturn {
      h2 .pip {
        background: $saturn;
      }
    }
    &.uranus {
      h2 .pip {
        background: $uranus;
      }
    }
    &.neptune {
      h2 .pip {
        background: $neptune;
      }
    }
    &.pluto {
      h2 .pip {
        background: $pluto;
      }
    }

    & .preview {
      // 행성 미리보기 이미지의 스타일
      width: 30px; // 미리보기의 너비
      height: 30px; // 미리보기의 높이
      background: yellow; // 미리보기의 배경색 (노란색)
      float: left;
      background-size: auto 100% !important; // 비율 유지하며 배경 이미지 크기 조정
      position: absolute;
      border-radius: 100px; // 둥근 모양 설정
      box-shadow: 0 -13px 10px 2px black inset; // 내부 그림자 효과 추가
    }

    & .info {
      position: relative; // 상대 위치로 설정하여 배치
      left: 50px; // 왼쪽에서 50px 떨어지도록
      top: 1px; // 위에서 1px 내려오도록 설정
    }

    h2, h3 {
      // 메뉴 라벨의 제목과 부제목 스타일
      text-transform: uppercase; // 대문자로 변환
      margin: 0; // 마진 제거
      font-weight: 100; // 글자 두께를 얇게 설정
      letter-spacing: 2px; // 문자 간격을 2px로 설정
    }

    h2 {
      font-size: 11px; // h2 텍스트 크기 설정
      opacity: 0.4; // 투명도를 0.4로 설정하여 연하게 보이도록
      margin-bottom: 4px; // 아래쪽 여백 설정

      & .pip {
        // h2 안의 .pip 요소 스타일 (행성의 색상 표시 점)
        width: 0; // 초기 너비 설정
        height: 9px; // 높이 설정
        background: #fea082; // pip 배경색
        float: left;
        position: relative;
        top: 3px; // 3px 위로 이동하여 배치
        transition: all 0.3s; // 전환 효과 설정
        margin-right: 0px; // 오른쪽 여백 설정
      }
    }

    h3 {
      font-size: 8px; // h3 텍스트 크기 설정
      letter-spacing: 1px; // 문자 간격 설정
      transition: all 0.3s; // 전환 효과 설정
      opacity: 0.3; // 초기 투명도를 0.3으로 설정하여 연하게 보이도록
    }

    @for $l from 1 through $planetCount {
      &:nth-of-type(#{$l}) {
        // 각 행성을 중앙 정렬하여 화면의 중간에 배치
        $labelSize: 34px; // 각 행성 라벨의 높이
        $labelSpacing: $menuSpacing; // 각 라벨 사이의 간격
        $totalHeight: ($labelSize * $planetCount) + ($labelSpacing * ($planetCount)) / 2; // 전체 라벨 높이 계산

        // 각 행성을 화면 중간에 배치하도록 위치 조정
        top: calc(50vh + 100px + ((#{$labelSpacing} + #{$labelSize}) * #{$l}) + 0px - #{$totalHeight});
      }
    }
  }

  // 체크박스와 관련된 스타일 설정
  & input.read {
    display: none; // read 클래스의 input을 화면에서 숨김
  }

  // read가 체크된 상태일 때 패널의 위치를 오른쪽으로 조정하여 표시
  & .read:checked + label + input + .panel {
    right: 0;
  }

  // read가 체크된 상태일 때 label의 너비를 100%에서 420px을 뺀 너비로 설정
  & .read:checked + label {
    width: calc(100% - 420px);

    &::after {
      opacity: 1; // 가상 요소의 투명도를 설정하여 표시
      left: 0;
    }

  }

  // 오버레이 스타일 설정
  & .overlay {
    @extend %absPosition; // 절대 위치 믹스인 적용
    border-bottom: 1020px solid black;
    width: 1800px;
    height: 620px;
    top: auto;
    -webkit-transform: none;
    transform: none;
    top: -240px; // 상단에서 240px 이동하여 위치 설정
    left: -303px;
    opacity: 1; // 보이도록 설정
    border-radius: 100%; // 원형 모양 설정
    z-index: 0; // 다른 요소보다 뒤에 배치
    box-shadow: 0px -190px 215px 110px black inset; // 내부 그림자 효과 추가
  }

  // 각 행성을 순회하면서 스타일을 적용
  @for $a from 1 through $planetCount {
    $traverse: $traverse + " input + label +";
    $traverseTriggers: $traverseTriggers + " input + label +";

    @if ($a == 1) {
      $traverseTriggers: "label +";
    }
    @if ($a == 2) {
      $traverseTriggers: "label +";
    }
    @if($a == 1) {
      $traverse: "label +";
    }

    // 행성을 선택하는 라디오 버튼 스타일 설정
    input[type="radio"][name="planet"] {
      appearance: none; // 기본 라디오 버튼 스타일 제거

      &::after {
        @extend %absPosition; // 절대 위치 믹스인 적용
        @extend %trigger; // 트리거 믹스인 적용
        content: ''; // 가상 요소에 내용 없음
      }

      // 선택된 행성에 따라 스타일 적용
      &.planet#{$a}:checked {
        &::after {
          display: none; // 가상 요소 숨김
        }

        $input: "";

        // 선택된 행성에 따라 스타일을 설정
        @for $b from 1 through $a {
          $input: $input + "+label + input";
          & #{$input}::after {
            display: none; // 중간 가상 요소 숨김
          }
        }

        & + #{$traverse} div {
          & .solar_systm {
            &:nth-of-type(#{$a}) {
              pointer-events: all; // 선택된 행성의 요소를 클릭 가능하도록 설정
            }

            // 각 행성의 스타일과 애니메이션 설정
            @for $i from 1 through $planetCount {
              &:nth-of-type(#{$i}) .planet {
                $translateY: 0;
                $translateZ: - $planetSpacing * ($i - 1) + ($planetSpacing * ($a - 1));
                $rotateX: 4deg;
                $scaleOffset: 0.89;
                $opacity: 2 - ($i - 1) + ($a - 1);

                transform: translateZ($translateZ) translateY($translateY) rotatex($rotateX) scaleX($scaleOffset);
                opacity: $opacity;

                @if($a == $i) {
                  animation: planet 60s 3.9s infinite linear; // 애니메이션 적용
                }

                &_description {
                  @if($a == $i) {
                    opacity: 1;
                    transition: all .6s 2.6s; // 애니메이션 지연 시간
                    h2, h1 {
                      position: relative;
                      top: 0px;
                      transition: all .5s 3s;
                    }
                    p, a {
                      transition: all 1s 3.5s, padding 0.3s 0s;
                      opacity: 1;
                    }
                  }
                }

                & .moon {
                  @if($a == $i) {
                    opacity: 1;
                    transition: all 1s 3.2s; // 달 애니메이션 지연 시간 설정
                  }
                }

                & .trajectory {
                  @if($a == $i) {
                    opacity: 0.2;
                    transition: all .6s 2.9s; // 궤도 애니메이션 지연 시간 설정
                  }
                }

                & .overlay {
                  @debug $a;
                  @debug $i;
                  @if($a == $i) {
                    opacity: 1; // 오버레이 표시
                    top: -240px; // 오버레이 위치 조정
                  }
                }
              }
            }
          }
        }

        // 행성 라벨에 색상을 적용
        & + label.mercury {
          & > .info h3 {
            color:$mercury;
          }
        }

        & + label.venus {
          & > .info h3 {
            color:$venus;
          }
        }

        & + label.earth {
          & > .info h3 {
            color:$earth;
          }
        }

        & + label.mars {
          & > .info h3 {
            color:$mars;
          }
        }

        & + label.jupiter {
          & > .info h3 {
            color:$jupiter;
          }
        }

        & + label.saturn {
          & > .info h3 {
            color:$saturn;
          }
        }

        & + label.uranus {
          & > .info h3 {
            color:$uranus;
          }
        }

        & + label.neptune {
          & > .info h3 {
            color:$neptune;
          }
        }

        & + label.pluto {
          & > .info h3 {
            color:$pluto;
          }
        }

        // 행성 라벨에 대한 스타일 설정
        & + label {
          opacity: 1; // 기본적으로 보이도록 설정

          &:before {
            display: block;
            width: 4px; // 가상 요소 너비
            height: 4px; // 가상 요소 높이
            position: absolute;
            left: 2px;
            top: 2px;
            z-index: 2;
            background: white; // 흰색 배경 설정
            border-radius: 4px; // 둥근 모서리 설정
            content: ''; // 가상 요소 생성
          }

          & > .info h2 {
            opacity: 1; // h2 요소의 투명도를 설정하여 표시
            & .pip {
              width: 30px; // pip 요소의 너비
              margin-right: 6px;
            }
          }

          & > .info h3 {
            opacity: 1;
            color: #fea082; // h3의 색상 설정
          }
        }
      }
    }
  }


  // 태양계 전체 시스템에 스타일 적용
  .solar {
    @extend %viewPort; // 뷰포트 믹스인 적용하여 3D 뷰포트 설정

    &_systm {
      // 각 행성에 대한 초기 뷰 설정
      @for $i from 1 through 10 {
        &:nth-of-type(#{$i}) {
          & .planet {
            $translateY: 0;
            $translateZ: -$planetSpacing * ($i - 1); // 행성의 Z축 위치 설정
            $opacity: 2 - ($i - 1); // 행성의 투명도 설정
            $rotateX: 4deg;
            $scaleOffset: 0.89;
            transform: translateZ($translateZ) translateY($translateY) rotatex($rotateX) scalex($scaleOffset);
            opacity: $opacity;

            &_description {
              opacity: 1;

              p, a {
                opacity: 0; // 텍스트 요소의 기본 투명도 설정
              }

              h1, h2 {
                position: relative;
                top: -330px; // 초기 위치 설정
                transition: all .5s 0s; // 트랜지션 효과
              }
            }
          }
        }
      }

      & .planet {
        @extend %absPosition; // 절대 위치 믹스인 적용
        @extend %planet; // 행성 믹스인 적용

        & .trajectory {
          transition: all .6s 0s; // 궤도 애니메이션 지연 시간 설정
          opacity: 0;
        }

        // 각 행성의 텍스처, 궤도, 위성을 설정하는 믹스인 사용
        &.mercury {
          @include makePlanet(rgba(188, 143, 127, 0.6), rgba(234, 205, 199, 0.6), 'https://www.solarsystemscope.com/images/textures/full/2k_makemake_fictional.jpg');
        }
        &.venus {
          @include makePlanet(#b85a07, #ffcb9c, 'https://nasa3d.arc.nasa.gov/shared_assets/images/ven0aaa2/ven0aaa2-copy-428-321.jpg');
        }
        &.earth {
          @include makePlanet(#7894a9, #8cbaff, 'https://img00.deviantart.net/04ef/i/2009/114/3/e/new_earth_texture_map_by_lightondesigns.jpg');
          & .trajectory.m {
            @include makeTrajectory(1500px, -150px, -110px); // 궤도 설정
          }
          & .moon {
            @include makeMoon(800px, -160px, 0.45, 'https://img2.cgtrader.com/items/702173/682fad2a11/92k-moon-color-map-3d-model.jpg');
            h3 {
              color: $earth; // 달의 색상 설정
            }

          }
        }

        &.mars {
          @include makePlanet(#6b261a,#e86363, 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/mars_texture.jpg');
          & .moon {

            h3 {
              color: $mars; //화성의 위성 색상 설정
            }

          }

          & .deimos {
            @include makeMoon(900px, -100px, 0.45, 'https://www.jpl.nasa.gov/spaceimages/images/largesize/PIA07782_hires.jpg');
          }

          & .trajectory.d {
            @include makeTrajectory(1770px, -317px, -110px);
          }

          & .trajectory.p {
            @include makeTrajectory(1600px, -200px, -160px);
          }

          & .phoebos {
            @include makeMoon(100px, -160px, 0.5, 'https://www.jpl.nasa.gov/spaceimages/images/largesize/PIA07782_hires.jpg');
          }
        }

        &.jupiter {
          & .moon {
            h3 {
              color: $jupiter;
            }
          }

          & .trajectory.lop {
            @include makeTrajectory(1500px, -210px, -189px);
          }

          & .trajectory.eu {
            @include makeTrajectory(1530px, -165px, -130px);
          }

          & .trajectory.ga {
            @include makeTrajectory(1760px, -360px, -114px);
          }

          @include makePlanet(rgba(188, 143, 127, 0.6), rgba(234, 205, 199, 0.6), 'https://www.jpl.nasa.gov/spaceimages/images/largesize/PIA07782_hires.jpg');

          & .lo {
            @include makeMoon(100px, -100px, 0.4, 'http://stevealbers.net/albers/sos/jupiter/io/io_rgb_cyl.jpg');
          }

          & .europa {
            @include makeMoon(400px, -210px, 0.45, 'http://i.imgur.com/ZZBiHOH.jpg');
          }

          & .ganymede {
            @include makeMoon(900px, -70px, 0.4, 'https://vignette.wikia.nocookie.net/planet-texture-maps/images/1/14/Ganymede.jpg/revision/latest?cb=20180104001948');
          }
        }

        &.saturn {
          & .moon {
            h3 {
              color: $saturn;
            }

          }

          @include makePlanet(rgba(188, 143, 127, 0.6), rgba(234, 205, 199, 0.6), 'https://www.solarsystemscope.com/images/textures/full/2k_saturn.jpg');

          & .trajectory.ti {
            @include makeTrajectory(1500px, -210px, -189px);
          }

          & .trajectory.di {
            @include makeTrajectory(1530px, -165px, -130px);
          }

          & .trajectory.enc {
            @include makeTrajectory(1760px, -360px, -114px);
          }

          & .titan {
            @include makeMoon(100px, -100px, 0.4, 'https://pre00.deviantart.net/bea3/th/pre/i/2017/057/7/f/titan_texture_map_8k_by_fargetanik-db0f8m0.png');
          }

          & .dione {
            @include makeMoon(400px, -210px, 0.45, 'https://www.jpl.nasa.gov/spaceimages/images/wallpaper/PIA12577-640x350.jpg');
          }

          & .enceladus {
            @include makeMoon(900px, -70px, 0.4, 'https://img.purch.com/w/660/aHR0cDovL3d3dy5zcGFjZS5jb20vaW1hZ2VzL2kvMDAwLzA0NC8yMzkvb3JpZ2luYWwvZW5jZWxhZHVzLW1hcC1jYXNzaW5pLmpwZw==');
          }
        }

        &.uranus {
          & .moon {
            h3 {
              color: $uranus; // 천왕성의 색상을 달의 텍스트에 적용
            }
          }

          // 천왕성의 각 궤도 설정
          & .trajectory.mir {
            @include makeTrajectory(1500px, -210px, -189px); // 미란다 궤도
          }
          & .trajectory.ari {
            @include makeTrajectory(1530px, -165px, -130px); // 아리엘 궤도
          }
          & .trajectory.umb {
            @include makeTrajectory(1760px, -360px, -114px); // 엄브리엘 궤도
          }


          // 천왕성의 위성(달) 설정
          & .miranda {
            @include makeMoon(100px, -100px, 0.4, 'http://celestia.simulatorlabbs.com/CelSL/textures/medres/miranda.jpg');
          }
          & .ariel {
            @include makeMoon(400px, -210px, 0.45, 'http://celestia.freedoors.org/Celestia-Doors/textures/medres/ariel.jpg');
          }
          & .umbriel {
            @include makeMoon(900px, -70px, 0.4, 'http://celestia.freedoors.org/Celestia-Doors/textures/medres/titania.jpg');
          }

          // 천왕성 행성 자체 스타일 설정
          @include makePlanet(rgba(127, 188, 171, 0.6), rgba(234, 205, 199, 0.6), 'https://img00.deviantart.net/957c/i/2017/165/4/9/uranus_texture_map_by_jcpag2010-db7yjwb.png');
        }

        &.neptune {
          & .moon {
            h3 {
              color: $neptune; // 해왕성의 색상을 달의 텍스트에 적용
            }
          }

          // 해왕성의 각 궤도 설정
          & .trajectory.tri {
            @include makeTrajectory(1500px, -210px, -189px); // 트리톤 궤도
          }
          & .trajectory.pro {
            @include makeTrajectory(1530px, -165px, -130px); // 프로테우스 궤도
          }
          & .trajectory.ner {
            @include makeTrajectory(1760px, -360px, -114px); // 네레이드 궤도
          }

          // 해왕성의 위성(달) 설정
          & .triton {
            @include makeMoon(100px, -100px, 0.4, 'https://img00.deviantart.net/b934/i/2016/198/b/0/triton_texture_map_14k_by_fargetanik-daac9tm.png');
          }
          & .proteus {
            @include makeMoon(400px, -210px, 0.45, 'http://2.bp.blogspot.com/-NrsDNbSk8TU/VKmLHdOgw0I/AAAAAAAAHvY/dod1Kqv2Ta8/s1600/NereidTxt2.jpg');
          }
          & .nereid {
            @include makeMoon(900px, -70px, 0.4, 'http://4.bp.blogspot.com/-3eyaVs4az74/VKmMpLo6FYI/AAAAAAAAHvs/zK5NTllQYnk/s1600/NereidTxt.jpg');
          }


          // 해왕성 행성 자체 스타일 설정
          @include makePlanet(rgb(45, 65, 83), rgba(234, 205, 199, 0.6), 'https://www.solarsystemscope.com/images/textures/full/2k_neptune.jpg');
        }

        &.pluto {
          // 명왕성 행성 자체 스타일 설정
          @include makePlanet(rgb(45, 65, 83), rgba(234, 205, 199, 0.6), 'https://pre00.deviantart.net/4677/th/pre/f/2015/314/4/e/pluto_map__2015_nov_10__by_snowfall_the_cat-d918tlb.png');
        }

        // 행성 설명 영역 스타일 설정
        &_description {
          width: 620px;
          text-align: center;
          position: absolute;
          margin: auto;
          left: 0;
          z-index: 2;
          right: 0;
          color: white;
          font-weight: 100;
          transition: all .4s 0s;
          text-transform: uppercase;
          z-index: 1;

          // 각 행성에 따른 색상 설정
          &.mercury {
            a {
              color: $mercury;
            }

            h2 {
              color: lighten($mercury, 20);
            }
          }

          &.venus {
            a {
              color: $venus;
            }

            h2 {
              color: lighten($venus, 20);
            }
          }

          &.earth {
            a {
              color: $earth;
            }

            h2 {
              color: lighten($earth, 20);
            }
          }

          &.mars {
            a {
              color: $mars;
            }

            h2 {
              color: lighten($mars, 20);
            }
          }

          &.jupiter {
            a {
              color: $jupiter;
            }

            h2 {
              color: lighten($jupiter, 20);
            }
          }

          &.saturn {
            a {
              color: $saturn;
            }

            h2 {
              color: lighten($saturn, 20);
            }
          }

          &.uranus {
            a {
              color: $uranus;
            }

            h2 {
              color: lighten($uranus, 20);
            }
          }

          &.neptune {
            a {
              color: $neptune;
            }

            h2 {
              color: lighten($neptune, 20);
            }
          }

          &.pluto {
            a {
              color: $pluto;
            }

            h2 {
              color: lighten($pluto, 20);
            }
          }
          // 행성 설명 영역 내의 글꼴 스타일 설정
          h1,
          h2,
          p,
          a {
            font-weight: 100;
            font-size: 1.8vh;
            letter-spacing: 5px;
            margin: 0;
          }

          h1 {
            letter-spacing: 16px;
            font-size: 34px;
          }

          h2,
          a {
            color: #fabfad;
          }

          h2 {
            margin-top: 60px;
            margin-bottom:6px;
          }

          p {
            line-height: 26px;
            margin-top:14px;
            oapcity: 0.9;
            margin-bottom: 10px;
          }

          a {
            color: #fea082;
            font-size: 11px;
            font-weight: 500;
            padding: 0 2px 5px 0px;
            border-bottom: 2px solid;
            transition: all 0.2s;
            position: relative;
            left: 0;

            &:hover {
              padding: 0 10px 5px 10px;
              left: -1px;
            }

            span {
              letter-spacing: 0;
              margin-left: -5px;
            }
          }
        }
      }
    }
  }
  // 패널 스타일 설정
  & .panel {
    position: absolute;
    right: -520px;
    width: 300px;
    top: 0;
    height: 100vh;
    transition: all 0.2s;
    color: black;
    background: white;
    padding: 10px 60px 0px 60px;
    overflow: scroll;
    body::-webkit-scrollbar {
      width: 1em;
    }


    // 패널 내 프로필 스타일
    .profile {
      padding-top: 4px;
      p {
        line-height: 10px;
        span {
          font-weight: 600;
          color: black;
        }
      }
    }

  }
}