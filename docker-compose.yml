version: '3.9'

services:
  app_1:
    image: ghcr.io/24-10-astroneer-team-project/24_10_star_info_web:latest
    container_name: 24_10_star_info_web_1
    ports:
      - "8082:8080"
    environment:
      - TZ=Asia/Seoul
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - /dockerProjects/starInfo/volumes/gen:/gen
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  app_2:
    image: ghcr.io/24-10-astroneer-team-project/24_10_star_info_web:latest
    container_name: 24_10_star_info_web_2
    ports:
      - "8083:8080"
    environment:
      - TZ=Asia/Seoul
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - /dockerProjects/starInfo/volumes/gen:/gen
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - app_network

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80" # Nginx를 통해 80 포트로 접근
    depends_on:
      - app1
      - app2
    volumes:
      - /dockerProjects/starInfo/nginx.conf:/etc/nginx/nginx.conf # Nginx 설정 파일 매핑
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
